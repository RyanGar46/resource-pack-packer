{
  "$id": "https://raw.githubusercontent.com/RyanGar46/resource-pack-packer/main/schema/assets/blockstates",
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "A blockstate asset.",
  "description": "A Minecraft asset that determines what model should be used for a block.",
  "type": "object",
  "oneOf": [
    {
      "properties": {
        "variants": {
          "description": "Holds the names of all the variants of the block.",
          "type": "object",
          "additionalProperties": {
            "title": "A Variant",
            "description": "Name of a variant, which consists of the relevant block states separated by commas. A block with just one variant uses \"\" as a name for its variant. Each variant can have one model or an array of models and contains their properties. If set to an array, the model is chosen randomly from the options given, with each option being specified in separate subsidiary -tags. Item frames are treated as blocks and use \"map=false\" for a map-less item frame, and \"map=true\" for item frames with maps.",
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/model"
                }
              },
              {
                "$ref": "#/definitions/model"
              }
            ]
          }
        }
      },
      "required": ["variants"]
    },
    {
      "properties": {
        "multipart": {
          "description": "Used instead of variants to combine models based on block state attributes.",
          "type": "array",
          "items": {
            "title": "A Case",
            "description": "Determines a case and the model that should apply in that case.",
            "properties": {
              "when": {
                "description": "A list of cases that have to be met for the model to be applied. If unset, the model always applies.",
                "type": "object",
                "oneOf": [
                  {
                    "properties": {
                      "OR": {
                        "description": "Matches if any of the contained cases return true. Cannot be set alongside other cases. ",
                        "type": "array",
                        "items": {
                          "title": "A Condition",
                          "description": "A list of cases that all have to match the block to return true.",
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/definitions/state"
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "additionalProperties": {
                      "$ref": "#/definitions/state"
                    }
                  }
                ]
              },
              "apply": {
                "description": "Determines the model(s) to apply and its properties. There can be one model or an array of models. If set to an array, the model is chosen randomly from the options given, with each option being specified in separate subsidiary -tags.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/model"
                    }
                  },
                  {
                    "type": "object",
                    "$ref": "#/definitions/model"
                  }
                ]
              }
            },
            "required": [
              "when",
              "apply"
            ]
          }
        }
      },
      "required": ["multipart"]
    }
  ],
  "definitions": {
    "model": {
      "title": "A Model",
      "description": "Contains the properties of a model, if more than one model is used for the same variant. All specified models alternate in the game.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Specifies the path to the model file of the block, in form of a resource location.",
          "type": "string"
        },
        "x": {
          "description": "Rotation of the model on the x-axis in increments of 90 degrees.",
          "type": "integer",
          "default": 0,
          "multipleOf": 90
        },
        "y": {
          "description": "Rotation of the model on the y-axis in increments of 90 degrees.",
          "default": 0,
          "multipleOf": 90
        },
        "uvlock": {
          "description": "Can be true or false (default). Locks the rotation of the texture of a block, if set to true. This way the texture does not rotate with the block when using the x and y-tags above.",
          "type": "boolean",
          "default": false
        },
        "weight": {
          "description": "Sets the probability of the model for being used in the game, defaults to 1 (=100%). If more than one model is used for the same variant, the probability is calculated by dividing the individual model's weight by the sum of the weights of all models. (For example, if three models are used with weights 1, 1, and 2, then their combined weight would be 4 (1+1+2). The probability of each model being used would then be determined by dividing each weight by 4: 1/4, 1/4 and 2/4, or 25%, 25% and 50%, respectively.)",
          "type": "integer",
          "default": 1
        }
      },
      "required": ["model"]
    },
    "state": {
      "title": "State",
      "description": "Name of a block state. A single case that has to match one of the block states. It can be set to a list separated by | to allow multiple values to match. Cannot be set alongside the OR-tag.",
      "type": "string"
    }
  }
}